var filter = {
  priceFilter: function (value = '0') {
    var value = Math.round(parseFloat(value) * 100) / 100;
    var xsd = value.toString().split(".");
    if (xsd.length == 1) {
      value = value.toString() + ".00";
      return value;
    }
    if (xsd.length > 1) {
      if (xsd[1].length < 2) {
        value = value.toString() + "0";
      }
      return value;
    }
  },
  toDecimal: function (value = '0') {
    var val = parseFloat(value)
    if (isNaN(val)) {
      return
    } 
    val = Math.round(value * 100) / 100;
    return val 
  },
  toFix:function (value='0') {
    //console.log(value, "$$$$$$$$$$$$$$$$$$")
    // if (value>1000) {
    //   return  value.toFixed(1)+'km'
    // } else {
    //   return  parseInt(value)+'m'
    // }
  }
}
// 格式化时间
var regYear = getRegExp("(y+)", "i");

var dateFormat = function (timestamp, format) {
  if (!format) {
    format = "yyyy-MM-dd hh:mm:ss";
  }
  if (!timestamp) {
    return ' '
  }
  timestamp = parseInt(timestamp);
  var realDate = getDate(timestamp);

  function timeFormat(num) {
    return num < 10 ? '0' + num : num;
  }
  var date = [
    ["M+", timeFormat(realDate.getMonth() + 1)],
    ["d+", timeFormat(realDate.getDate())],
    ["h+", timeFormat(realDate.getHours())],
    ["m+", timeFormat(realDate.getMinutes())],
    ["s+", timeFormat(realDate.getSeconds())],
    ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
    ["S+", realDate.getMilliseconds()],
  ];
  var reg1 = regYear.exec(format);
  if (reg1) {
    format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length));
  }
  for (var i = 0; i < date.length; i++) {
    var k = date[i][0];
    var v = date[i][1];

    var reg2 = getRegExp("(" + k + ")").exec(format);
    if (reg2) {
      format = format.replace(reg2[1], reg2[1].length == 1 ?
        v : ("00" + v).substring(("" + v).length));
    }
  }
  return format
}
module.exports = {
  priceFilter: filter.priceFilter,
  toDecimal: filter.toDecimal,
  dateFormat: dateFormat,
  pst: filter.pst,
  toFix: filter.toFix
}